<!--sticky4.ui-->
<template>
  <view>
    <!-- 自定义导航 -->
    <ui-nav-bar slot="nav-bar" custom-style="{{ {borderBottom:'1px solid rgba(231, 231, 231, 0.6)',backgroundColor:'#fff'} }}">
      <ui-row height="46">
        <ui-col vertical-align="middle" align="center" width="60" bindtap="navigateBack">
            <ui-icon type="arrow-left" size="16" color="#333"></ui-icon>
        </ui-col>
        <ui-col vertical-align="middle" align="center">
          <view>sticky和tabs共用</view>
        </ui-col>
        <ui-col vertical-align="middle" align="center" width="60">
        </ui-col>
      </ui-row>
    </ui-nav-bar>
    <view style="height:{{NAV_HEIGHT}}px"></view>
    <view class="sticky-in-relative-container">
      <ui-sticky scroll-top="{{ scrollTop }}" top="{{NAV_HEIGHT}}" custom-style="{{ {backgroundColor:'#FFF'} }}">
        <view>
          <ui-tabs tab-style="{{ {width:width/2+'px !important'} }}" active-tab-style="{{ {width:width/2+'px !important'} }}" index="{{index}}" bindchange="handleChange">
            <ui-tab>选项一</ui-tab>
            <ui-tab>选项二</ui-tab>
          </ui-tabs>
        </view>
        <view slot="sticky">
          <ui-tabs tab-style="{{ {width:width/2+'px !important'} }}" active-tab-style="{{ {width:width/2+'px !important'} }}" index="{{index}}" bindchange="handleChange">
            <ui-tab>选项一</ui-tab>
            <ui-tab>选项二</ui-tab>
          </ui-tabs>
        </view>
    </ui-sticky>
    </view>
    <view class="content_list">
      <view wx:for="{{ items }}" class="{{index % 2 == 0 ? 'grey-bg':''}}">
        {{ item }}
      </view>
    </view>
  </view>
</template>

<script>
let items = []
for (let i = 1; i <= 30; i++) {
  items.push(`列表项目${i}`)
}
export default {
  config: {
    "navigationBarTitleText": "sticky和tabs共用"
  },
  data: {
    items: items,
    index:0,
    scrollTop:0,
    width:wx.WIN_WIDTH,
    NAV_HEIGHT:wx.STATUS_BAR_HEIGHT+wx.DEFAULT_HEADER_HEIGHT
  },
  navigateBack () {
    wx.navigateBack()
  },
  handleChange(e){
    console.log(e)
    let index =  e.detail.index
    this.setData({
      index:index 
    })
  },
  onPageScroll (e) {
    console.log(e)
    this.setData({
      scrollTop: e.scrollTop
    })
  }
}

</script>

<style lang="less">

</style>
